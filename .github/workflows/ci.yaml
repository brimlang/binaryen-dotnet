# CI workflow for Brim.Binaryen

name: ci

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
    branches: [main]

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    name: CI (${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            rid: linux-x64
          # macOS and Windows support can be enabled as needed
          - os: macos-14
            rid: osx-arm64
          # - os: macos-13
          #   rid: osx-x64
          - os: windows-2022
            rid: win-x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup mise
        uses: jdx/mise-action@v2

      - name: Setup environment (native + dotnet)
        run: mise run setup

      - name: Test (mise)
        run: mise run test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tests-${{ matrix.os }}
          path: |
            **/TestResults/*.trx
            **/TestResults/*.xml
          if-no-files-found: error

      - name: Pack (mise)
        if: matrix.os == 'ubuntu-latest' && matrix.rid == 'linux-x64'
        run: mise run pack

      - name: Upload package artifact
        if: matrix.os == 'ubuntu-latest' && matrix.rid == 'linux-x64'
        uses: actions/upload-artifact@v4
        with:
          name: nupkg
          path: artifacts/package/*.nupkg
          if-no-files-found: error

  publish-gh:
    name: Publish to GitHub Packages (on main)
    needs: ci
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download nupkg
        uses: actions/download-artifact@v4
        with:
          name: nupkg
          path: ./nupkg

      - name: Push to GitHub Packages
        run: |
          dotnet nuget push "nupkg/*.nupkg" \
            --api-key "${{ secrets.GITHUB_TOKEN }}" \
            --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
            --skip-duplicate

  publish-nuget:
    name: Publish to NuGet (on tag)
    needs: ci
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download nupkg
        uses: actions/download-artifact@v4
        with:
          name: nupkg
          path: ./nupkg

      - name: Push to NuGet
        run: |
          dotnet nuget push "nupkg/*.nupkg" \
            --api-key "${{ secrets.NUGET_API_KEY }}" \
            --source "https://api.nuget.org/v3/index.json" \
            --skip-duplicate
